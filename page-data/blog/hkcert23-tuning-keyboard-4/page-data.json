{"componentChunkName":"component---src-pages-blog-strapi-article-slug-tsx","path":"/blog/hkcert23-tuning-keyboard-4/","result":{"data":{"allStrapiArticle":{"nodes":[{"id":"36024f68-fe1a-52d4-bbde-ec82f53b6506","slug":"hkcert23-tuning-keyboard-4","title":"HKCERT23 CTF - Tuning Keyboard 4 (369)","description":"https://ctftime.org/event/2122","content":{"data":{"content":"# Challenge\nTuning Keyboard (通靈鍵盤) is typical challenge in HKCERT CTF every year (author: Black Bauhinia Zetta.)   \nIt is a `Misc` challenge which aim to `guess` author's thought.   \n無厘頭得嚟, 又有佢嘅一套規律; 好似係到搵埋咗入茫茫沙漠入面嘅flag...解唔到通靈鍵盤可能係唔夠了解zetta 😛   \nbtw, challenge score is 369 <img src=\"https://www.cms.void-dojo.ninja/uploads/369_4b39bee1bf.webp\" alt=\"inline\" />   \nSadly, this year I haven't make it.  \n<br/>\nChallenge only given an unrelated article wtf (will be skipped here) and this <a href=\"https://www.cms.void-dojo.ninja/uploads/flag_3ec9f83f94.html\" target=\"_blank\">HTML file</a>\n\n# Direction\nYou will see a HTML canvas that draw an 「東南西北」. I think most of the us in Hong Kong should know it, it's a paper toy we play when we were kids.   \nWhen you hover 東南西北, it will start rotating ans scale down... ???   \nSeem it is meaningless.   \n<br />\nSomeone find that if we convert those HSL to RGB, then for `rgb` value convert them into color hex (e.g. #FF8800), then from the concatenated hex sequence we get the base64 encoded flag lol.   \n\n# Solve\nOpen web developer tools when browsing the HTML, use the following code to solve:\n```javascript\nfunction parseHslValuesFromText(text) {\n    hslTexts = text.split(';');\n    return hslTexts.map(hslText => {\n        let match = hslText.match(/hsl\\((.+?)rad,(.+?)%,(.+?)%\\)/);\n        if (match) {\n            let hueInRadians = parseFloat(match[1]);\n            let hueInDegrees = hueInRadians * 180 / Math.PI;\n            return [hueInDegrees, parseFloat(match[2]), parseFloat(match[3])];\n        }\n    });\n}\n\n// https://stackoverflow.com/a/44134328/13109740\nfunction hslToHex(h, s, l) {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n    let r, g, b;\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const hue2rgb = (p, q, t) => {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        };\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    const toHex = x => {\n        const hex = Math.round(x * 255).toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    return `${toHex(r)}${toHex(g)}${toHex(b)}`;\n}\n\nmagic = Array.from(document.querySelectorAll('animate[attributeName=\"fill\"]')).map(nl => {\n    let elmValuesText = nl.getAttribute('values');\n    let hslValues = parseHslValuesFromText(elmValuesText);\n    let hexValues = hslValues.map(hsl => hslToHex(...hsl));\n    return hexValues;\n});\n\n// 東南西北\nres = \"\";\nfor (i = 0; i < magic[0].length; i++) {\n    for (j = 0; j < 4; j++) {\n        res += magic[j][i];\n    }\n}\n```\n\nYou will get `6147746a5a584a304d6a4e374f5463304e7a4d314e7a4a66614746765833426e66513d3d`.     \nIt is a base64 encoded string.   \nIf you are sensitive enough then you may recognize that `base64(hkcert23)` = [HEX] 0x6147746a... so pay attention when u see `61477`, it properly some clue to the flag.   \nHere we can use handy tool like <a href=\"https://gchq.github.io/CyberChef/#recipe=From_Hex('Auto')From_Base64('A-Za-z0-9%2B/%3D',true,false)\" target=\"_blank\">CyberChef</a> to help us on the final step: decoding.  \n<br/>\n<br/>\nflag: `hkcert23{97473572_hao_pg}`"}},"updatedAt":"2023-12-02T03:59:08.511Z","publishedAt":"2023-12-01T15:09:08.624Z","tags":[{"name":"misc","color":"indigo"},{"name":"hkcertctf","color":"yellow"}],"categories":[{"name":"ctf","color":"red"}],"cover":{"formats":{"thumbnail":{"url":"/uploads/thumbnail_hkcert23_banner_0e9291d451.png"},"small":null}}}]}},"pageContext":{"id":"36024f68-fe1a-52d4-bbde-ec82f53b6506","slug":"hkcert23-tuning-keyboard-4","__params":{"slug":"hkcert23-tuning-keyboard-4"}}},"staticQueryHashes":["3001278788"],"slicesMap":{}}